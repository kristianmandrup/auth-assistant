require 'generators/auth_assistant/migration_helper'

module AuthAssistant
  module Generators
    class ClearGenerator < Rails::Generators::NamedBase       
      desc "Clears the rails project from any artifacts generated by auth_assist" 

      def self.source_root
        @_devise_source_root ||= File.expand_path("../templates", __FILE__)
      end

      def get_strategy
        @strategy = AuthAssistant::Model.role_strategy
      end

      def generate_clear_migration
        case @strategy
        when :admin_field
          clear_migration_admin_field          
        when :role_field
          clear_migration_role_field        
        end
      end      
      
      protected
        def clear_migration_admin_field                
          say 'Generating clear migration for AdminField'
          admin_field_migration             
          reverse_migration 'add_admin_field_to_user'
          run 'rake db:migrate'
        end

        def reverse_migration(name)
          # go into migrations dir
          FileUtils.cd File.join(Rails.root, 'db/migrate')
            mig_files = FileUtils[*.rb].reject{|f| (f =~ /#{Regexp.escape(name)}/) == nil }
            reverse_migration_methods(mig_files.first) if !mig_files.empty?
          end          
        end

        def reverse_migration_methods(file) 
          FileUtil.cp file, new_name = "remove_#{strategy}"
          file_swap_content(File.new(new_name), 'self.up', 'self.down')
        end
        
        def file_reverse(file, str1, str2) 
          # use thor action          
          file.replace str1, str2
          file.replace str2, str1
        end

        include AuthAssistant::MigrationHelper
    end
  end
end